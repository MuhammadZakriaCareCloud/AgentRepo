# Generated by Django 5.0.7 on 2025-09-30 07:49

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AIProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('provider_type', models.CharField(choices=[('openai', 'OpenAI'), ('azure_openai', 'Azure OpenAI'), ('anthropic', 'Anthropic'), ('google', 'Google AI'), ('custom', 'Custom Provider')], max_length=20)),
                ('api_key', models.CharField(max_length=500)),
                ('api_endpoint', models.URLField(blank=True, null=True)),
                ('default_model', models.CharField(max_length=100)),
                ('available_models', models.JSONField(default=list)),
                ('max_tokens', models.IntegerField(default=4000)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ai_providers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AIConversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conversation_type', models.CharField(choices=[('call', 'Phone Call'), ('chat', 'Chat'), ('email', 'Email'), ('sms', 'SMS')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('terminated', 'Terminated'), ('error', 'Error')], default='active', max_length=20)),
                ('contact_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('model_used', models.CharField(max_length=100)),
                ('system_prompt', models.TextField()),
                ('message_count', models.IntegerField(default=0)),
                ('total_tokens_used', models.IntegerField(default=0)),
                ('conversation_metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('ai_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_integration.aiprovider')),
            ],
            options={
                'db_table': 'ai_conversations',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('system', 'System'), ('user', 'User'), ('assistant', 'Assistant')], max_length=20)),
                ('content', models.TextField()),
                ('tokens_used', models.IntegerField(default=0)),
                ('model_used', models.CharField(blank=True, max_length=100, null=True)),
                ('processing_time_ms', models.IntegerField(blank=True, null=True)),
                ('function_call', models.JSONField(blank=True, null=True)),
                ('tool_calls', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='ai_integration.aiconversation')),
            ],
            options={
                'db_table': 'ai_messages',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIPromptTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('category', models.CharField(choices=[('sales', 'Sales'), ('support', 'Customer Support'), ('appointment', 'Appointment Booking'), ('survey', 'Survey'), ('follow_up', 'Follow Up'), ('general', 'General')], max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('system_prompt', models.TextField()),
                ('initial_message', models.TextField(blank=True, null=True)),
                ('ai_parameters', models.JSONField(blank=True, default=dict)),
                ('template_variables', models.JSONField(blank=True, default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usage_count', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ai_prompt_templates',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='AIAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('hour', models.IntegerField(blank=True, null=True)),
                ('metric_type', models.CharField(choices=[('token_usage', 'Token Usage'), ('response_time', 'Response Time'), ('conversation_length', 'Conversation Length'), ('success_rate', 'Success Rate'), ('cost', 'Cost')], max_length=50)),
                ('metric_value', models.FloatField()),
                ('model_used', models.CharField(blank=True, max_length=100, null=True)),
                ('conversation_type', models.CharField(blank=True, max_length=20, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ai_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ai_integration.aiprovider')),
            ],
            options={
                'db_table': 'ai_analytics',
                'ordering': ['-date', '-hour'],
            },
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['contact_phone'], name='ai_conversa_contact_21c12b_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['status'], name='ai_conversa_status_02485a_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['conversation_type'], name='ai_conversa_convers_bdf9fc_idx'),
        ),
        migrations.AddIndex(
            model_name='aiconversation',
            index=models.Index(fields=['created_at'], name='ai_conversa_created_2a9347_idx'),
        ),
        migrations.AddIndex(
            model_name='aianalytics',
            index=models.Index(fields=['date'], name='ai_analytic_date_25e11f_idx'),
        ),
        migrations.AddIndex(
            model_name='aianalytics',
            index=models.Index(fields=['metric_type'], name='ai_analytic_metric__73d4e1_idx'),
        ),
        migrations.AddIndex(
            model_name='aianalytics',
            index=models.Index(fields=['ai_provider'], name='ai_analytic_ai_prov_9c4cda_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='aianalytics',
            unique_together={('date', 'hour', 'metric_type', 'ai_provider', 'model_used')},
        ),
    ]
