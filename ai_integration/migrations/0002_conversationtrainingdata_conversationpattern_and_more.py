# Generated by Django 5.0.7 on 2025-09-30 10:24

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('ai_integration', '0001_initial'),
        ('calls', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConversationTrainingData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conversation_category', models.CharField(choices=[('sales', 'Sales'), ('support', 'Customer Support'), ('appointment', 'Appointment Booking'), ('survey', 'Survey'), ('follow_up', 'Follow Up'), ('complaint', 'Complaint Handling'), ('information', 'Information Request'), ('other', 'Other')], max_length=20)),
                ('outcome', models.CharField(choices=[('successful', 'Successful'), ('partially_successful', 'Partially Successful'), ('unsuccessful', 'Unsuccessful'), ('incomplete', 'Incomplete'), ('error', 'Error')], max_length=20)),
                ('success_score', models.FloatField(default=0.0, help_text='0.0-1.0 success rating')),
                ('conversation_summary', models.TextField()),
                ('key_phrases', models.JSONField(blank=True, default=list)),
                ('user_intents', models.JSONField(blank=True, default=list)),
                ('agent_responses', models.JSONField(blank=True, default=list)),
                ('conversation_turns', models.IntegerField(default=0)),
                ('average_response_time', models.FloatField(blank=True, null=True)),
                ('user_satisfaction_score', models.FloatField(blank=True, null=True)),
                ('what_worked_well', models.TextField(blank=True, null=True)),
                ('areas_for_improvement', models.TextField(blank=True, null=True)),
                ('recommended_responses', models.JSONField(blank=True, default=list)),
                ('contact_info', models.JSONField(blank=True, default=dict)),
                ('call_context', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('processed_for_training', models.BooleanField(default=False)),
                ('training_weight', models.FloatField(default=1.0)),
                ('is_high_quality', models.BooleanField(default=False)),
                ('reviewed_by_human', models.BooleanField(default=False)),
                ('ai_conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='training_data', to='ai_integration.aiconversation')),
                ('call', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='training_data', to='calls.call')),
                ('reviewer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'conversation_training_data',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationPattern',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pattern_type', models.CharField(choices=[('opening', 'Opening Pattern'), ('objection_handling', 'Objection Handling'), ('closing', 'Closing Pattern'), ('information_gathering', 'Information Gathering'), ('rapport_building', 'Rapport Building')], max_length=30)),
                ('pattern_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('trigger_conditions', models.JSONField(blank=True, default=dict)),
                ('conversation_flow', models.JSONField(blank=True, default=list)),
                ('expected_responses', models.JSONField(blank=True, default=list)),
                ('success_rate', models.FloatField(default=0.0)),
                ('usage_count', models.IntegerField(default=0)),
                ('average_conversation_length', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('source_conversations', models.ManyToManyField(blank=True, related_name='patterns', to='ai_integration.conversationtrainingdata')),
            ],
            options={
                'db_table': 'conversation_patterns',
                'ordering': ['-success_rate', '-usage_count'],
            },
        ),
        migrations.CreateModel(
            name='AgentTrainingSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('training_type', models.CharField(choices=[('incremental', 'Incremental Learning'), ('batch', 'Batch Training'), ('fine_tuning', 'Fine Tuning'), ('knowledge_update', 'Knowledge Base Update')], max_length=20)),
                ('training_parameters', models.JSONField(blank=True, default=dict)),
                ('model_version', models.CharField(blank=True, max_length=50, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('training_metrics', models.JSONField(blank=True, default=dict)),
                ('performance_improvements', models.JSONField(blank=True, default=dict)),
                ('conversations_processed', models.IntegerField(default=0)),
                ('knowledge_entries_created', models.IntegerField(default=0)),
                ('knowledge_entries_updated', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('training_data_used', models.ManyToManyField(blank=True, to='ai_integration.conversationtrainingdata')),
            ],
            options={
                'db_table': 'agent_training_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AgentKnowledgeBase',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('knowledge_type', models.CharField(choices=[('faq', 'FAQ'), ('response_pattern', 'Response Pattern'), ('objection_handling', 'Objection Handling'), ('conversation_flow', 'Conversation Flow'), ('product_info', 'Product Information'), ('policy', 'Policy/Procedure'), ('script', 'Script Template')], max_length=20)),
                ('category', models.CharField(max_length=50)),
                ('tags', models.JSONField(blank=True, default=list)),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('context', models.TextField(blank=True, null=True)),
                ('trigger_phrases', models.JSONField(blank=True, default=list)),
                ('success_contexts', models.JSONField(blank=True, default=list)),
                ('usage_count', models.IntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('average_user_satisfaction', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('confidence_score', models.FloatField(default=0.5)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('derived_from_conversations', models.ManyToManyField(blank=True, related_name='knowledge_entries', to='ai_integration.conversationtrainingdata')),
            ],
            options={
                'db_table': 'agent_knowledge_base',
                'ordering': ['-success_rate', '-usage_count'],
            },
        ),
        migrations.CreateModel(
            name='AgentPerformanceMetrics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('period_type', models.CharField(choices=[('hourly', 'Hourly'), ('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly')], max_length=10)),
                ('period_start', models.DateTimeField()),
                ('period_end', models.DateTimeField()),
                ('agent_version', models.CharField(blank=True, max_length=50, null=True)),
                ('total_conversations', models.IntegerField(default=0)),
                ('successful_conversations', models.IntegerField(default=0)),
                ('success_rate', models.FloatField(default=0.0)),
                ('average_conversation_length', models.FloatField(blank=True, null=True)),
                ('average_response_time', models.FloatField(blank=True, null=True)),
                ('user_satisfaction_score', models.FloatField(blank=True, null=True)),
                ('outcomes_breakdown', models.JSONField(blank=True, default=dict)),
                ('new_patterns_learned', models.IntegerField(default=0)),
                ('knowledge_base_updates', models.IntegerField(default=0)),
                ('total_tokens_used', models.IntegerField(default=0)),
                ('estimated_cost', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ai_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ai_integration.aiprovider')),
            ],
            options={
                'db_table': 'agent_performance_metrics',
                'ordering': ['-period_start'],
                'unique_together': {('period_type', 'period_start', 'ai_provider')},
            },
        ),
        migrations.AddIndex(
            model_name='conversationtrainingdata',
            index=models.Index(fields=['conversation_category'], name='conversatio_convers_637adf_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationtrainingdata',
            index=models.Index(fields=['outcome'], name='conversatio_outcome_a4ffc3_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationtrainingdata',
            index=models.Index(fields=['success_score'], name='conversatio_success_038557_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationtrainingdata',
            index=models.Index(fields=['processed_for_training'], name='conversatio_process_349235_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationtrainingdata',
            index=models.Index(fields=['is_high_quality'], name='conversatio_is_high_137f91_idx'),
        ),
        migrations.AddIndex(
            model_name='conversationtrainingdata',
            index=models.Index(fields=['created_at'], name='conversatio_created_263d74_idx'),
        ),
        migrations.AddIndex(
            model_name='agentknowledgebase',
            index=models.Index(fields=['knowledge_type'], name='agent_knowl_knowled_09846a_idx'),
        ),
        migrations.AddIndex(
            model_name='agentknowledgebase',
            index=models.Index(fields=['category'], name='agent_knowl_categor_2d44eb_idx'),
        ),
        migrations.AddIndex(
            model_name='agentknowledgebase',
            index=models.Index(fields=['success_rate'], name='agent_knowl_success_054120_idx'),
        ),
        migrations.AddIndex(
            model_name='agentknowledgebase',
            index=models.Index(fields=['is_active'], name='agent_knowl_is_acti_6e0439_idx'),
        ),
    ]
